---

- block:
    - include_tasks: setup-from-{{ 'release' if vagrant_from_release|bool else 'repository' }}.yml

    - name: Get installed Vagrant plugins
      ansible.builtin.command:
        vagrant plugin list
      changed_when: false
      check_mode: false
      register: _vagrant_plugin

    - name: Install Vagrant plugins
      ansible.builtin.command:
        vagrant plugin install vagrant-{{ item }}
      loop: '{{ vagrant_plugins }}'
      when: item not in _vagrant_plugin.stdout
  tags: packages

- block:
    - import_tasks: configure.yml

    - block:
        - name: Check boxes are up-to-date
          ansible.builtin.command:
            vagrant box outdated
          args:
            chdir: '{{ vagrant_machines_directory }}'
          changed_when: "'to update' in _vagrant_outdated.stdout"
          check_mode: false
          register: _vagrant_outdated

        - block:
            - name: Update boxes
              ansible.builtin.command:
                vagrant box update
              args:
                chdir: '{{ vagrant_machines_directory }}'

            - name: Cleanup boxes
              ansible.builtin.command:
                vagrant box prune --force {{ ansible_check_mode|ternary('--dry-run', '') }}
              changed_when: >
                _vagrant_prune is success and (
                  'Usage' not in _vagrant_prune.stdout and
                  'no installed' not in _vagrant_prune.stdout and
                  'No old versions' not in _vagrant_prune.stdout
                )
              check_mode: false
              register: _vagrant_prune
          when: _vagrant_outdated is change
      tags: upgrade
      when: vagrant_update_boxes|bool

    - name: Provision machines
      vagrant_machine:
        chdir: '{{ vagrant_machines_directory }}'
        name: '{{ item.name }}'
        provider: '{{ item.provider }}'
        state: running
        timeout: '{{ item.timeout|int if item.timeout is defined else omit }}'
      loop: '{{ vagrant_machines }}'
      loop_control:
        label: '{{ item.name }}'
      register: _vagrant_provision
  always:
    # FIXME less verbose output https://github.com/ansible/ansible/issues/5564
    - name: Cleanup machines SSH authentication footprints
      ansible.builtin.known_hosts:
        name: '{{ item.item.host_public }}'
        state: absent
      loop: '{{ _vagrant_provision.results|default([]) }}'
      loop_control:
        label: '{{ item.item.name }}'
      when: item is change
  tags: provision

- name: Wait for machines to be started
  local_action:
    module: ansible.builtin.wait_for
    host: '{{ item.host_public }}'
    port: 22
    state: started
  loop: '{{ vagrant_machines }}'
  loop_control:
    label: '{{ item.name }}'
  tags: provision

...
