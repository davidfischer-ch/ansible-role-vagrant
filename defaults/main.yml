vagrant_dynamic_defaults:

  apt:
    vagrant_release_url: 'https://releases.hashicorp.com/vagrant/{{ vagrant_version }}/vagrant_{{ vagrant_version }}_x86_64.deb'
    vagrant_release_validate_certs: no
    vagrant_from_release: no

  yum:
    vagrant_release_url: 'https://releases.hashicorp.com/vagrant/{{ vagrant_version }}/vagrant_{{ vagrant_version }}_x86_64.rpm'
    vagrant_from_release: yes

  linux:
    vagrant_packages:
      - vagrant

  macosx:
    vagrant_from_release: no
    vagrant_release_url: 'https://releases.hashicorp.com/vagrant/{{ vagrant_version }}/vagrant_{{ vagrant_version }}_x86_64.dmg'
    vagrant_packages:
      - vagrant

  default:
    vagrant_release_checksum: ''

vagrant_apt_key: https://apt.releases.hashicorp.com/gpg
vagrant_apt_key_checksum: sha256:cafb01beac341bf2a9ba89793e6dd2468110291adfbb6c62ed11a0cde6c09029
vagrant_apt_distribution: '{{ ansible_distribution_release }}'
vagrant_apt_repository: deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ vagrant_apt_distribution }} main

vagrant_machines: []
vagrant_machines_directory: "/tmp/vagrant-{{ vagrant_machines|to_yaml|hash('md5') }}"
vagrant_plugins: []  # e.g. vbox-snapshot
vagrant_release_validate_certs: yes
vagrant_update_boxes: yes
vagrant_version: UNDEFINED  # Hack to fix `undefined error` even if not relevant ...
